[metadata]
description-file = README.md
license_files = LICENSE

[pycodestyle]
max-line-length = 88
exclude = .git,__pycache__,.venv,venv,build,dist

[flake8]
max-line-length = 88
exclude = .git,__pycache__,.venv,venv,build,dist
max-complexity = 10
select = B,C,E,F,W,T4,B9
ignore = E203, E501, W503
per-file-ignores =
    # Allow * imports in __init__.py
    __init__.py: F403,F401
    # Allow non-abstract empty methods in abstract base classes
    */base.py: B027

[isort]
profile = black
line_length = 88
skip = .venv, venv, build, dist, __pycache__
known_third_party = torch,transformers,peft,accelerate,bitsandbytes,huggingface_hub,click,rich,loguru,pydantic,jinja2,pyyaml,requests

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
warn_no_return = True
warn_redundant_casts = True
warn_unused_ignores = True
no_implicit_optional = True
strict_optional = True
ignore_missing_imports = True

[coverage:run]
source = wronai
omit =
    */tests/*
    */__init__.py
    */version.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

[egg_info]
tag_build =
tag_date = 0

[build_sphinx]
all_files = 1
build-dir = docs/_build
source-dir = docs
project = wronai
version = 0.1.0
release = 0.1.0
copyright = 2024, WronAI Team
master_doc = index

[pyright]
include = ["wronai"]
typeCheckingMode = "strict"
pythonVersion = "3.8"
pythonPlatform = "Linux"
exclude = ["**/node_modules", "**/__pycache__", "**/.pytest_cache", "**/venv", "**/.venv"]
