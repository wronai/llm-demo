version: '3.8'

services:
  # Ollama - LLM Engine (minimalna konfiguracja)
  ollama:
    image: ollama/ollama:latest
    container_name: ollama-engine
    env_file: .env
    ports:
      - "11437:11434"  # Using a different port to avoid conflicts
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    # deploy:
      # resources:
        # reservations:
          # devices:
            # - driver: nvidia
              # count: 1
              # capabilities: [gpu]
    restart: unless-stopped

  # Streamlit UI (Python frontend)
  streamlit-ui:
    build: .
    container_name: llm-ui
    env_file: .env
    ports:
      - "8501:8501"
    depends_on:
      - ollama
    environment:
      - OLLAMA_URL=http://ollama:11434
    restart: unless-stopped
    volumes:
      - ./app:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Model Setup (inicjalizacja modelu)
  model-setup:
    image: ollama/ollama:latest
    container_name: model-setup
    env_file: .env
    depends_on:
      - ollama
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=http://ollama:${OLLAMA_PORT:-11434}
    command: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        sleep 10 &&
        ollama pull mistral:7b-instruct &&
        echo 'Model loaded successfully!'
      "
    restart: "no"

volumes:
  ollama_data: